from pydantic import BaseModel, UUID4, Field
from datetime import datetime
from typing import Optional, List


# --- üì¶ –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã --- #

class SubscriptionPlanBase(BaseModel):
    """
    –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ (–¥–ª—è –≤—ã–≤–æ–¥–∞).
    """
    id: UUID4
    name: str
    description: Optional[str]
    price: float
    duration_days: int
    scopes: List[str]
    is_active: bool



class SubscriptionPlanCreate(BaseModel):
    """
    –°—Ö–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞.
    """
    name: str = Field(..., max_length=50)
    description: Optional[str] = Field(None, max_length=255)
    price: float = Field(..., ge=0)
    duration_days: int = Field(..., ge=1)
    scopes: List[str] = Field(default_factory=list)


class SubscriptionPlanUpdate(BaseModel):
    """
    –°—Ö–µ–º–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ (—á–∞—Å—Ç–∏—á–Ω–∞—è).
    """
    name: Optional[str] = Field(None, max_length=50)
    description: Optional[str] = Field(None, max_length=255)
    price: Optional[float] = Field(None, ge=0)
    duration_days: Optional[int] = Field(None, ge=1)
    scopes: Optional[List[str]]
    is_active: Optional[bool]


# --- üë§ –ü–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π --- #

class SubscribeRequest(BaseModel):
    """
    –°—Ö–µ–º–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏.
    """
    plan_id: UUID4
    external_id: Optional[str] = None  # –ù–∞–ø—Ä–∏–º–µ—Ä, Stripe/RevenueCat ID


class UserSubscriptionOut(BaseModel):
    """
    –°—Ö–µ–º–∞ –æ—Ç–≤–µ—Ç–∞ —Å —Ç–µ–∫—É—â–µ–π –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    plan: SubscriptionPlanBase
    start_date: datetime
    end_date: datetime
    is_active: bool

